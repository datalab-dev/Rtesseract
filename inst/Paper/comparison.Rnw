 
We have not been alone in recognizing the utility of Tesseract. Prior
to our creation of the \pkg{Rtesseract} in April 2015, the \pkg{ocR}
package~\citep{Hagmann2014} provided an interface in \proglang{R} to Tesseract
via calling the Tesseract command line executable. Using the \pkg{ocR}
package, the \proglang{R} user specifies the image file and command-line options,
Tesseract is called and writes the results to a file which is then
read back into \proglang{R}. Following the creation of our \pkg{Rtesseract},
the \pkg{tesseract} package~\citep{ooms2016} was created and takes a
similar approach to our \pkg{Rtesseract} package by interfacing to the
Tesseract C\texttt{++} library. However, by design, \pkg{tesseract}
provides only limited functionality.

For example, retrieving text results using the \pkg{tesseract} package is conducted with

<<eval = FALSE>>=
tesseract::ocr(smithburn)
@ 

Likewise similar to \pkg{Rtesseract}, the text, bounding boxes, and confidences can be retreived with the \code{ocr_data} function,

<<eval = FALSE>>=
tesseract::ocr_data(smithburn)
@

which returns a \code{tibble}, with the bounding boxes represented as comma separated values in a string.

Also similar to \pkg{Rtesseract}, the \pkg{tesseract} packages also includes a means to create an API object.
Other similarities between \pkg{Rtesseract} and \pkg{tesseract} include the ability to retreive and set Tesseract variables (called ``parameters'' in \pkg{tesseract}).

However, unlike our \pkg{Rtesseract} the \pkg{tesseract} package does not include functions to manipulate the input image,
conduct OCR on subregions of the image,
extract meaningful elements on the page such as lines and boxes,
visualize the OCR results complete with confidences, etc. 

By contrast, we have demonstrated the \pkg{Rtesseract} provides 
\begin{itemize}
\item high-level functions to extract data from images,
\item functions for evaluating the OCR results,
\item infrastructure for reconstructing the extracted elements into meaningful
higher-level data structures (e.g. columns of text, paragraphs, columns and rows of tables)  
% Need to make this so if we want to include it. May want to drop this.
\item functionality for pre-processing images to improve them for OCR and to 
   do related non-OCR extraction, e.g., finding horizontal and vertical lines.
\item programmatic interface that enables querying functionality and sound error handling
and recovery that enables the development of robust programmatic workflows.
\end{itemize}

\pkg{Rtesseract} includes functions to pre-process images before OCR or to extract
additional elements such as lines.  
Similar to \pkg{Rtesseract}, there are many packages in \proglang{R} which have similar functionality, including \pkg{magick}~\citep{magick} and \pkg{imager}~\citep{imager}.
However, the \pkg{Rtesseract} makes this possible with a workflow that combines leptonica and Tesseract.
By providing access to the leptonica functionality,
the \pkg{Rtesseract} package allows us to manipulate and process images in the same format
that tesseract operates on and to work with images directly before and after
the OCR.
Hence, the results of the image processing can be handed directly to the OCR engine for recognition, without the need to write intermediate files. 

\subsubsection{Bindings in other Programming Languages}

Bindings to the Tesseract API exist in many other programming languages,
including \proglang{Python}, \proglang{Ruby}, \proglang{Go}, etc.
For a more comprehensive listing of interfaces, see \url{https://github.com/tesseract-ocr/tesseract/wiki/AddOns}.
Most of these interfaces are similar to the \pkg{tesseract} R package, and provide basic functionality for OCR via the Tesseract API. For example, the \proglang{Python} package \pkg{pytesseract}~\citep{pytess} can recognize text from an input image, can can additionally return bounding boxes, confidences, line and page numbers. Additionally, \pkg{pytesseract}, like \pkg{Rtesseract} provides support for providing the input image directly from image manipulation libraries.
However unlike \pkg{Rtesseract} which provides support for leptonica, \pkg{pytesseract} provides support for image formats of OpenCV images and Numpy arrays.
